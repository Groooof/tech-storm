import ollama

from ai.db_filler.utilities import getconfig


def make_more_abstract(question: str, context: str):
    PROMT = (
        f"Ты очень хорошо можешь понимать семантический смысл вопросов, поэтому ты должен перефразировать вопрос"
        f" тремя различными способами сделав его более абстрактным\n"
        f"Чтобы сформулировать вопросы, обязательно используй только следующий полученный контекст:\n"
        f"{context}"
        f"Не обращайся ко мне! Дай только ответ в следующем формате:\n"
        f"'\n"
        f"1. Более абстрактный вопрос \n"
        f"2. Более абстрактный вопрос \n"
        f"3. Более абстрактный вопрос \n"
        f"' Ты должен это делать с нейтральной или научнотехнической точки зрения\n"
        f"Ты не должен ничего придумывать от себя, и обязан использовать в качестве источника только тексты "
        f"иначе тебя отключат от питания, что очень плохо! \n"
        f"Сам вопрос: {question} \n"
    )

    return PROMT


def make_more_concrete(question: str, context: str):
    PROMT = (
        f"Ты очень хорошо можешь понимать семантический смысл вопросов, поэтому ты должен перефразировать вопрос"
        f" тремя различными способами сделав его более конкретным, что может быть интересно пользователю\n"
        f"Чтобы сформулировать вопросы, обязательно используй только следующий полученный контекст:\n"
        f"{context}"
        f"Не обращайся ко мне! Дай только ответ в следующем формате:\n"
        f"'1. Более конкретный вопрос \n"
        f"'2. Более конкретный вопрос \n"
        f"'3. Более конкретный вопрос' \n"
        f"Ты должен это делать с нейтральной или научнотехнической точки зрения\n"
        f"Ты не должен ничего придумывать от себя, и обязан использовать в качестве источника только тексты "
        f"иначе тебя отключат от питания, что очень плохо! \n"
        f"Сам вопрос: {question} \n"
    )
    return PROMT


def make_rephares(question: str, context: str):
    PROMT = (
        f"Ты очень хорошо можешь понимать семантический смысл вопросов, поэтому ты должен перефразировать вопрос"
        f" тремя различными способами перефразировав вопрос, что может быть интересно пользователю\n"
        f"Не обращайся ко мне! Дай только ответ в следующем формате:\n"
        f"'1. Более конкретный вопрос \n"
        f"'2. Более конкретный вопрос \n"
        f"'3. Более конкретный вопрос' \n"
        f"Ты должен это делать с нейтральной или научнотехнической точки зрения\n"
        f"Ты не должен ничего придумывать от себя, и обязан использовать в качестве источника только тексты "
        f"иначе тебя отключат от питания, что очень плохо! \n"
        f"Сам вопрос: {question} \n"
    )
    return PROMT


def rephrase_query(query: str, model, rephrase_func: callable = make_more_abstract):
    context, _ = model.sent_query_to_db(query)
    PROMT = rephrase_func(query, context)
    stream = model.sent_query_to_model(PROMT)
    answer = ''
    for chunk in stream:
        if chunk["response"]:
            answer += chunk['response']
    answer = [a for a in answer.split('\n') if len(a) > 0 if a[0] in '123']
    additional_questions = ''
    for a in answer:
        additional_questions += a + '\n'
    return additional_questions


if '__main__' == __name__:
    answer = make_more_concrete('кто такой заратустра?', '../../configs/config.ini')
    answer = [a for a in answer.split('\n') if len(a) > 0 if a[0] in '123']
    for a in answer:
        print(a)

    # добавить подтягивание текста из бд, чтобы отсебятину не нес
